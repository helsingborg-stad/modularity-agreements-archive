.mod-agreementsarchiv {
  max-width: 100% !important;
  width: 100%;
  padding-top: 15px; }
  .mod-agreementsarchiv table {
    margin-top: 0px;
    padding-top: 0px; }
    .mod-agreementsarchiv table .number {
      min-width: 142px; }
  .mod-agreementsarchiv td {
    height: 72px; }
    .mod-agreementsarchiv td.title {
      font-weight: bold; }
    .mod-agreementsarchiv td.align-top {
      vertical-align: top;
      padding-top: 23px; }
  .mod-agreementsarchiv h4 {
    max-width: 100% !important; }
  .mod-agreementsarchiv .valid-from, .mod-agreementsarchiv .valid-to {
    min-width: 115px; }
  .mod-agreementsarchiv .container-fluid {
    padding: 0px; }
  .mod-agreementsarchiv .box {
    margin-bottom: 20px; }
  .mod-agreementsarchiv .searchApi .button {
    margin-left: 16px; }
  @media screen and (max-width: 500px) {
    .mod-agreementsarchiv .renderTable .gutter:not(.gutter-margin) {
      padding: 16px 0px; }
    .mod-agreementsarchiv .renderTable .grid-fit-content {
      margin: 0px; } }
  .mod-agreementsarchiv .grid-fit-content {
    margin-right: -6px; }
  @media screen and (max-width: 600px) {
    .mod-agreementsarchiv table span {
      font-weight: bold;
      white-space: pre; }
    .mod-agreementsarchiv table thead {
      border: none;
      clip: rect(0 0 0 0);
      height: 1px;
      margin: -1px;
      overflow: hidden;
      padding: 0;
      position: absolute;
      width: 1px; }
    .mod-agreementsarchiv table tr {
      display: block; }
    .mod-agreementsarchiv table td {
      display: block;
      height: auto; }
    .mod-agreementsarchiv table td::before {
      float: left;
      font-weight: bold;
      text-transform: uppercase; }
    .mod-agreementsarchiv table td:last-child {
      border-bottom: 0; } }

/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1vZHVsYXJpdHktYWdyZWVtZW50cy1hcmNoaXZlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSwyQkFBMkI7RUFDM0IsWUFBWTtFQUNaLGtCQUFrQixFQXVHckI7RUExR0Q7SUFNUSxnQkFBZ0I7SUFDaEIsaUJBQWlCLEVBS3BCO0lBWkw7TUFVWSxpQkFBaUIsRUFDcEI7RUFYVDtJQWVRLGFBQWEsRUFRaEI7SUF2Qkw7TUFpQlksa0JBQWtCLEVBQ3JCO0lBbEJUO01Bb0JZLG9CQUFvQjtNQUNwQixrQkFBaUIsRUFDcEI7RUF0QlQ7SUEwQlEsMkJBQTJCLEVBRTlCO0VBNUJMO0lBK0JRLGlCQUFpQixFQUNwQjtFQWhDTDtJQW1DUSxhQUFhLEVBQ2hCO0VBcENMO0lBdUNRLG9CQUFvQixFQUN2QjtFQXhDTDtJQTRDWSxrQkFBa0IsRUFDckI7RUFJRDtJQWpEUjtNQW1EZ0Isa0JBQWtCLEVBQ3JCO0lBcERiO01Bc0RnQixZQUFZLEVBQ2YsRUFBQTtFQXZEYjtJQTREUSxtQkFBbUIsRUFDdEI7RUFHRDtJQWhFSjtNQW9FZ0Isa0JBQWtCO01BQ2xCLGlCQUFpQixFQUNwQjtJQXRFYjtNQXlFZ0IsYUFBYTtNQUNiLG9CQUFVO01BQ1YsWUFBWTtNQUNaLGFBQWE7TUFDYixpQkFBaUI7TUFDakIsV0FBVztNQUNYLG1CQUFtQjtNQUNuQixXQUFXLEVBQ2Q7SUFqRmI7TUFvRmdCLGVBQWUsRUFDbEI7SUFyRmI7TUF3RmdCLGVBQWU7TUFDZixhQUFhLEVBQ2hCO0lBMUZiO01BNkZnQixZQUFZO01BQ1osa0JBQWtCO01BQ2xCLDBCQUEwQixFQUM3QjtJQWhHYjtNQW1HZ0IsaUJBQWlCLEVBQ3BCLEVBQUEiLCJmaWxlIjoibW9kdWxhcml0eS1hZ3JlZW1lbnRzLWFyY2hpdmUuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm1vZC1hZ3JlZW1lbnRzYXJjaGl2IHtcbiAgICBtYXgtd2lkdGg6IDEwMCUgIWltcG9ydGFudDtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBwYWRkaW5nLXRvcDogMTVweDtcblxuICAgIHRhYmxlIHtcbiAgICAgICAgbWFyZ2luLXRvcDogMHB4O1xuICAgICAgICBwYWRkaW5nLXRvcDogMHB4O1xuXG4gICAgICAgIC5udW1iZXIge1xuICAgICAgICAgICAgbWluLXdpZHRoOiAxNDJweDtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHRkIHtcbiAgICAgICAgaGVpZ2h0OiA3MnB4O1xuICAgICAgICAmLnRpdGxlIHtcbiAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICAgICAgICB9XG4gICAgICAgICYuYWxpZ24tdG9we1xuICAgICAgICAgICAgdmVydGljYWwtYWxpZ246IHRvcDtcbiAgICAgICAgICAgIHBhZGRpbmctdG9wOjIzcHg7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBoNCB7XG4gICAgICAgIG1heC13aWR0aDogMTAwJSAhaW1wb3J0YW50O1xuXG4gICAgfVxuXG4gICAgLnZhbGlkLWZyb20sIC52YWxpZC10byB7XG4gICAgICAgIG1pbi13aWR0aDogMTE1cHg7XG4gICAgfVxuXG4gICAgLmNvbnRhaW5lci1mbHVpZCB7XG4gICAgICAgIHBhZGRpbmc6IDBweDtcbiAgICB9XG5cbiAgICAuYm94IHtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMjBweDtcbiAgICB9XG5cbiAgICAuc2VhcmNoQXBpIHtcbiAgICAgICAgLmJ1dHRvbiB7XG4gICAgICAgICAgICBtYXJnaW4tbGVmdDogMTZweDtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIC5yZW5kZXJUYWJsZSB7XG4gICAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDUwMHB4KSB7XG4gICAgICAgICAgICAuZ3V0dGVyOm5vdCguZ3V0dGVyLW1hcmdpbikge1xuICAgICAgICAgICAgICAgIHBhZGRpbmc6IDE2cHggMHB4O1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLmdyaWQtZml0LWNvbnRlbnQge1xuICAgICAgICAgICAgICAgIG1hcmdpbjogMHB4O1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgLmdyaWQtZml0LWNvbnRlbnQge1xuICAgICAgICBtYXJnaW4tcmlnaHQ6IC02cHg7XG4gICAgfVxuXG5cbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA2MDBweCkge1xuXG4gICAgICAgIHRhYmxlIHtcbiAgICAgICAgICAgIHNwYW4ge1xuICAgICAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICAgICAgICAgICAgICAgIHdoaXRlLXNwYWNlOiBwcmU7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHRoZWFkIHtcbiAgICAgICAgICAgICAgICBib3JkZXI6IG5vbmU7XG4gICAgICAgICAgICAgICAgY2xpcDogcmVjdCgwIDAgMCAwKTtcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IDFweDtcbiAgICAgICAgICAgICAgICBtYXJnaW46IC0xcHg7XG4gICAgICAgICAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICAgICAgICAgICAgICBwYWRkaW5nOiAwO1xuICAgICAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgICAgICAgICB3aWR0aDogMXB4O1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICB0ciB7XG4gICAgICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHRkIHtcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IGF1dG87XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHRkOjpiZWZvcmUge1xuICAgICAgICAgICAgICAgIGZsb2F0OiBsZWZ0O1xuICAgICAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICAgICAgICAgICAgICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHRkOmxhc3QtY2hpbGQge1xuICAgICAgICAgICAgICAgIGJvcmRlci1ib3R0b206IDA7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgIH1cblxuXG59Il19 */
