.mod-agreementsarchiv {
  max-width: 100% !important;
  width: 100%;
  padding-top: 15px; }
  .mod-agreementsarchiv .box-title {
    padding-bottom: 10px; }
  .mod-agreementsarchiv table {
    margin-top: 0px;
    padding-top: 0px; }
    .mod-agreementsarchiv table .number {
      min-width: 142px; }
  .mod-agreementsarchiv td {
    height: 72px; }
    .mod-agreementsarchiv td.title {
      font-weight: bold; }
    .mod-agreementsarchiv td.align-top {
      vertical-align: top;
      padding-top: 23px; }
  .mod-agreementsarchiv h4 {
    max-width: 100% !important; }
  .mod-agreementsarchiv .valid-from, .mod-agreementsarchiv .valid-to {
    min-width: 115px; }
  .mod-agreementsarchiv .container-fluid {
    padding: 0px; }
  .mod-agreementsarchiv .box {
    margin-bottom: 30px; }
  .mod-agreementsarchiv .searchApi .button {
    margin-left: 16px !important; }
  .mod-agreementsarchiv .searchResult {
    padding-top: 10px; }
  @media screen and (max-width: 1002px) {
    .mod-agreementsarchiv .renderTable .gutter:not(.gutter-margin) {
      padding: 16px 0px; }
    .mod-agreementsarchiv .renderTable .grid-fit-content {
      margin: 0px; } }
  .mod-agreementsarchiv .grid-fit-content {
    margin-right: -6px; }
  @media screen and (max-width: 1002px) {
    .mod-agreementsarchiv .mod-agreementsarchiv {
      width: 98%; }
    .mod-agreementsarchiv table span {
      font-weight: bold;
      white-space: pre; }
    .mod-agreementsarchiv table thead {
      border: none;
      clip: rect(0 0 0 0);
      height: 1px;
      margin: -1px;
      overflow: hidden;
      padding: 0;
      position: absolute;
      width: 1px; }
    .mod-agreementsarchiv table tr {
      display: block; }
    .mod-agreementsarchiv table td {
      display: block;
      height: auto; }
    .mod-agreementsarchiv table td::before {
      float: left;
      font-weight: bold;
      text-transform: uppercase; }
    .mod-agreementsarchiv table td:last-child {
      border-bottom: 0; } }

/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1vZHVsYXJpdHktYWdyZWVtZW50cy1hcmNoaXZlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSwyQkFBMkI7RUFDM0IsWUFBWTtFQUNaLGtCQUFrQixFQStHckI7RUFsSEQ7SUFLUSxxQkFBb0IsRUFDdkI7RUFOTDtJQVFRLGdCQUFnQjtJQUNoQixpQkFBaUIsRUFLcEI7SUFkTDtNQVlZLGlCQUFpQixFQUNwQjtFQWJUO0lBaUJRLGFBQWEsRUFRaEI7SUF6Qkw7TUFtQlksa0JBQWtCLEVBQ3JCO0lBcEJUO01Bc0JZLG9CQUFvQjtNQUNwQixrQkFBaUIsRUFDcEI7RUF4QlQ7SUE0QlEsMkJBQTJCLEVBRTlCO0VBOUJMO0lBaUNRLGlCQUFpQixFQUNwQjtFQWxDTDtJQXFDUSxhQUFhLEVBQ2hCO0VBdENMO0lBeUNRLG9CQUFvQixFQUN2QjtFQTFDTDtJQThDWSw2QkFBNkIsRUFDaEM7RUEvQ1Q7SUFrRFEsa0JBQWlCLEVBQ3BCO0VBR0c7SUF0RFI7TUF3RGdCLGtCQUFrQixFQUNyQjtJQXpEYjtNQTJEZ0IsWUFBWSxFQUNmLEVBQUE7RUE1RGI7SUFpRVEsbUJBQW1CLEVBQ3RCO0VBR0Q7SUFyRUo7TUF1RVksV0FFSCxFQUFDO0lBekVWO01BOEVnQixrQkFBa0I7TUFDbEIsaUJBQWlCLEVBQ3BCO0lBaEZiO01BbUZnQixhQUFhO01BQ2Isb0JBQVU7TUFDVixZQUFZO01BQ1osYUFBYTtNQUNiLGlCQUFpQjtNQUNqQixXQUFXO01BQ1gsbUJBQW1CO01BQ25CLFdBQVcsRUFDZDtJQTNGYjtNQThGZ0IsZUFBZSxFQUNsQjtJQS9GYjtNQWtHZ0IsZUFBZTtNQUNmLGFBQWEsRUFDaEI7SUFwR2I7TUF1R2dCLFlBQVk7TUFDWixrQkFBa0I7TUFDbEIsMEJBQTBCLEVBQzdCO0lBMUdiO01BNkdnQixpQkFBaUIsRUFDcEIsRUFBQSIsImZpbGUiOiJtb2R1bGFyaXR5LWFncmVlbWVudHMtYXJjaGl2ZS5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubW9kLWFncmVlbWVudHNhcmNoaXYge1xuICAgIG1heC13aWR0aDogMTAwJSAhaW1wb3J0YW50O1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIHBhZGRpbmctdG9wOiAxNXB4O1xuICAgIC5ib3gtdGl0bGUge1xuICAgICAgICBwYWRkaW5nLWJvdHRvbToxMHB4O1xuICAgIH1cbiAgICB0YWJsZSB7XG4gICAgICAgIG1hcmdpbi10b3A6IDBweDtcbiAgICAgICAgcGFkZGluZy10b3A6IDBweDtcblxuICAgICAgICAubnVtYmVyIHtcbiAgICAgICAgICAgIG1pbi13aWR0aDogMTQycHg7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICB0ZCB7XG4gICAgICAgIGhlaWdodDogNzJweDtcbiAgICAgICAgJi50aXRsZSB7XG4gICAgICAgICAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICAgICAgfVxuICAgICAgICAmLmFsaWduLXRvcHtcbiAgICAgICAgICAgIHZlcnRpY2FsLWFsaWduOiB0b3A7XG4gICAgICAgICAgICBwYWRkaW5nLXRvcDoyM3B4O1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgaDQge1xuICAgICAgICBtYXgtd2lkdGg6IDEwMCUgIWltcG9ydGFudDtcblxuICAgIH1cblxuICAgIC52YWxpZC1mcm9tLCAudmFsaWQtdG8ge1xuICAgICAgICBtaW4td2lkdGg6IDExNXB4O1xuICAgIH1cblxuICAgIC5jb250YWluZXItZmx1aWQge1xuICAgICAgICBwYWRkaW5nOiAwcHg7XG4gICAgfVxuXG4gICAgLmJveCB7XG4gICAgICAgIG1hcmdpbi1ib3R0b206IDMwcHg7XG4gICAgfVxuXG4gICAgLnNlYXJjaEFwaSB7XG4gICAgICAgIC5idXR0b24ge1xuICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IDE2cHggIWltcG9ydGFudDtcbiAgICAgICAgfVxuICAgIH1cbiAgICAuc2VhcmNoUmVzdWx0IHtcbiAgICAgICAgcGFkZGluZy10b3A6MTBweDtcbiAgICB9XG5cbiAgICAucmVuZGVyVGFibGUge1xuICAgICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAxMDAycHgpIHtcbiAgICAgICAgICAgIC5ndXR0ZXI6bm90KC5ndXR0ZXItbWFyZ2luKSB7XG4gICAgICAgICAgICAgICAgcGFkZGluZzogMTZweCAwcHg7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAuZ3JpZC1maXQtY29udGVudCB7XG4gICAgICAgICAgICAgICAgbWFyZ2luOiAwcHg7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAuZ3JpZC1maXQtY29udGVudCB7XG4gICAgICAgIG1hcmdpbi1yaWdodDogLTZweDtcbiAgICB9XG5cblxuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDEwMDJweCkge1xuICAgICAgICAubW9kLWFncmVlbWVudHNhcmNoaXYge1xuICAgICAgICAgICAgd2lkdGg6OTglXG5cbiAgICAgICAgfVxuICAgICAgICB0YWJsZSB7XG5cblxuICAgICAgICAgICAgc3BhbiB7XG4gICAgICAgICAgICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgICAgICAgICAgICAgd2hpdGUtc3BhY2U6IHByZTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgdGhlYWQge1xuICAgICAgICAgICAgICAgIGJvcmRlcjogbm9uZTtcbiAgICAgICAgICAgICAgICBjbGlwOiByZWN0KDAgMCAwIDApO1xuICAgICAgICAgICAgICAgIGhlaWdodDogMXB4O1xuICAgICAgICAgICAgICAgIG1hcmdpbjogLTFweDtcbiAgICAgICAgICAgICAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgICAgICAgICAgICAgIHBhZGRpbmc6IDA7XG4gICAgICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICAgICAgICAgIHdpZHRoOiAxcHg7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHRyIHtcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgdGQge1xuICAgICAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICAgICAgICAgIGhlaWdodDogYXV0bztcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgdGQ6OmJlZm9yZSB7XG4gICAgICAgICAgICAgICAgZmxvYXQ6IGxlZnQ7XG4gICAgICAgICAgICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgICAgICAgICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgdGQ6bGFzdC1jaGlsZCB7XG4gICAgICAgICAgICAgICAgYm9yZGVyLWJvdHRvbTogMDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgfVxufSJdfQ== */
